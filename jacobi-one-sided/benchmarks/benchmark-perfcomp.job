#!/bin/bash
#SBATCH -J bm-perf
#SBATCH -N 10
#SBATCH --tasks-per-node=16
#SBATCH --export=NONE
###SBATCH --get-user-env
#SBATCH --time=00:10:00
#SBATCH --partition=mem_0128
#SBATCH --qos=devel_0128

module purge > /dev/null 
module load intel/18 intel-mpi/2018 intel-mkl/2018 gcc/7.3	\
			python/2.7 numpy/1.15.4 matplotlib/3.0.2 > /dev/null

  export MPI_PROCESSES=$SLURM_NTASKS
  export OMP_NUM_THREADS=1
  export VERBOSE=noverbose

  export KMP_AFFINITY=compact,granularity=thread,1,0 
  export I_MPI_PIN=enable
  export I_MPI_PIN_PROCESSOR_LIST=allcores:map=bunch

dimension=3
runs=3
inst_directory="instances${dimension}d"
instances=(
	input-1000.txt
	input-2000.txt
	input-3000.txt
	input-4000.txt
	input-5000.txt
	input-6000.txt
	input-7000.txt
	input-8000.txt
	input-9000.txt
	)

split_dir=(
	X
	Y
	Z
	)

outname="bmp_$(date +%F_%H-%M)"

echo "${dimension}D version"
echo "$MPI_PROCESSES processes"
echo ""

echo "7,NoShMem,H=1 s=X,H=2 s=X,H=1 s=Y,H=2 s=Y,H=1 s=Z,H=2 s=Z" > ${outname}-perf.csv
echo "7,NoShMem,H=1 s=X,H=2 s=X,H=1 s=Y,H=2 s=Y,H=1 s=Z,H=2 s=Z" > ${outname}-time.csv

for file in "${instances[@]}"; do
	for (( i=0; i<$runs; i++ )) do
		echo -n "$file, " >> ${outname}-perf.csv
		echo -n "$file, " >> ${outname}-time.csv

		timerstart=$(date +%s)
		output=$(mpirun -n $MPI_PROCESSES ../jacobi.x 		\
				--no-shared-memory							\
				--input-instance=$inst_directory/$file)
		timerstop=$(date +%s)
		echo "$output"
		echo "mpirun took $((timerstop - timerstart)) +/-1 seconds"
		echo ""
		perfresult=$(echo "$output" | grep Performance | grep -oe "[0-9]*\.[0-9]*")
		timeresult=$(echo "$output" | grep elapsed | grep -oe "[0-9]*\.[0-9]*")
		echo -n "${perfresult},  " >> ${outname}-perf.csv
		echo -n "${timeresult},  " >> ${outname}-time.csv

		for dir in "${split_dir[@]}"; do
			for h in {1..2}; do
				timerstart=$(date +%s)
				output=$(mpirun -n $MPI_PROCESSES ../jacobi.x 		\
						--split-direction=$dir						\
						--heads-per-shared-region=$h				\
						--input-instance=$inst_directory/$file)
				timerstop=$(date +%s)
				echo "$output"
				echo "mpirun took $((timerstop - timerstart)) +/-1 seconds"
				echo ""
				perfresult=$(echo "$output" | grep Performance | grep -oe "[0-9]*\.[0-9]*")
				timeresult=$(echo "$output" | grep elapsed | grep -oe "[0-9]*\.[0-9]*")
				echo -n "${perfresult},  " >> ${outname}-perf.csv
				echo -n "${timeresult},  " >> ${outname}-time.csv
			done
		done
		echo "" >> ${outname}-perf.csv
		echo "" >> ${outname}-time.csv
	done
done

sleep 5

column -s, -t < ${outname}-perf.csv > ${outname}-perf.table
column -s, -t < ${outname}-time.csv > ${outname}-time.table

python perfprofiler.py	--title="Performance comparison" --xlabel="MFlops ratio"	\
						--marker-type=none --output=${outname}.pdf ${outname}.csv

echo "END"

